{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","isTie","result","matchResult","resultMargin","className","to","date","venue","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","fetchTeam","a","fetch","process","response","json","data","title","value","totalMatches","totalWins","color","animate","label","dataEntry","Math","round","percentage","slice","map","id","YearSelector","year","years","i","push","Year","style","MatchPage","setMatches","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","NavBar","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b95f5af1.chunk.js","sourcesContent":["import { React } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport \"./MatchDetailCard.scss\";\n\nexport const MatchDetailCard = ({teamName, match}) => {\n    \n    if (!match) return null;\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\n    const otherTeamRoute = `/teams/${otherTeam}`;\n    const isMatchWon = teamName === match.matchWinner;\n    const isTie = match.result === 'tie' ? true : false;\n    var matchResult = \"\";\n    if(isTie)\n        matchResult = \"Match Tied\";\n    else\n        matchResult = match.matchWinner + \" won by \" + match.resultMargin + \" \" + match.result;\n\n    return (\n        <div className={isTie ? 'MatchDetailCard tie-card' : isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\n            <div>\n                <span className=\"vs\">vs</span>\n                <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\n                <h2 className=\"match-date\">{match.date}</h2>\n                <h3 className=\"match-venue\">at {match.venue}</h3>\n                <h3 className=\"match-result\">{matchResult} </h3>\n            </div>\n            <div className=\"additional-detail\">\n                <h3>Home Team</h3>\n                <p>{match.team1}</p>\n                <h3>Away Team</h3>\n                <p>{match.team2}</p>\n                <h3>Man of the match</h3>\n                <p>{match.playerOfMatch}</p>\n                <h3>Umpires</h3>\n                <p>{match.umpire1}, {match.umpire2}</p>\n            </div>\n        </div>\n    );\n}","import { React } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './MatchSmallCard.scss';\n\nexport const MatchSmallCard = ({match, teamName}) => {\n    if (!match) return null;\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\n    const otherTeamRoute = `/teams/${otherTeam}`;\n    const isMatchWon = teamName === match.matchWinner;\n    const isTie = match.result === 'tie' ? true : false;\n    var matchResult = \"\";\n    if(isTie)\n        matchResult = \"Match Tied\";\n    else\n        matchResult = match.matchWinner + \" won by \" + match.resultMargin + \" \" + match.result;\n    return (\n        <div className={isTie ? 'MatchSmallCard tie-card' : isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\n            <span className=\"vs\">vs</span>\n            <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\n            <p className=\"match-result\">{matchResult} </p>\n        </div>\n    );\n}","import { React, useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { MatchDetailCard } from '../components/MatchDetailCard';\nimport { MatchSmallCard } from '../components/MatchSmallCard';\nimport { PieChart } from 'react-minimal-pie-chart';\n\nimport './TeamPage.scss';\n\nexport const TeamPage = () => {\n\n    const [team, setTeam] = useState({matches: []});\n    const { teamName } = useParams();\n    \n    useEffect(\n        () => {\n            const fetchTeam = async () => {\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\n            const data = await response.json();\n            setTeam(data);\n         };\n         fetchTeam();\n        }, [teamName]\n    );\n\n    if (!team || !team.teamName) {\n        return <h1>Team not found</h1>\n    }\n    return (\n        <div className=\"TeamPage\">\n            <div className=\"team-name-section\">\n                <h1 className=\"team-name\">{team.teamName}</h1>\n            </div>\n            <div className=\"win-loss-section\">\n                Wins / Losses\n                <PieChart\n                    data={[\n                        { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d' },\n                        { title: 'Wins', value: team.totalWins, color: '#4da375' },\n                    ]}\n                    animate={true}\n                    label={({ dataEntry }) => `${Math.round(dataEntry.percentage)} %`}\n                />\n            </div>\n            <div className=\"match-detail-section\">\n                <h3>Latest Matches</h3>\n                <MatchDetailCard teamName={team.teamName} match={team.matches[0]}/>\n            </div>\n            {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}\n            <div className=\"more-link\">\n                <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More...</Link>\n            </div>\n        </div>\n    );\n}","import { React } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport './YearSelector.scss';\n\nexport const YearSelector = ({teamName}) => {\n    \n    const {year}=useParams()\n    let years = [];\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\n\n    for (let i = startYear; i <= endYear; i++ ) {\n        years.push(i);\n    }\n    \n    return (\n        <ol className=\"YearSelector\">\n        { years.map(Year => (\n            <li key={Year}>\n                <Link to={`/teams/${teamName}/matches/${Year}`}>\n                    {year==Year ? <span style={{color : 'yellow'}}>{year}</span> : Year }\n                </Link>\n            </li>\n        )) }\n        </ol>\n    )\n}","import { React, useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { MatchDetailCard } from '../components/MatchDetailCard';\nimport { YearSelector } from '../components/YearSelector';\n\nimport './MatchPage.scss';\n\nexport const MatchPage = () => {\n\n    const [matches, setMatches] = useState([]);\n    const { teamName, year } = useParams();\n    useEffect(\n        () => {\n            const fetchMatches = async () => {\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\n            const data = await response.json();\n            setMatches(data);\n         };\n         fetchMatches();\n        }, [teamName, year]\n    );\n    return (\n        <div className=\"MatchPage\">\n            <div className=\"year-selector\">\n                <h3> Select Year </h3>\n                <YearSelector teamName={teamName} />\n            </div>\n            <div className=\"match-details\">\n                <div className=\"team-heading-bar\">\n                    <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\n                    <Link className=\"summary-link\" to={`/teams/${teamName}`}>View Latest Summary</Link>\n                </div>\n                { matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)}\n            </div>\n        </div>\n    );\n}","import { React } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './TeamTile.scss';\n\nexport const TeamTile = ({teamName}) => {\n    return (\n        <Link to={`/teams/${teamName}`}>\n            <div className=\"TeamTile\">\n                <h1>{teamName}</h1>\n            </div>\n        </Link>\n    )\n}","import { React, useEffect, useState } from 'react';\nimport './HomePage.scss';\nimport { TeamTile } from '../components/TeamTile';\n\nexport const HomePage = () => {\n\n    const [teams, setTeams] = useState([]);\n    \n    useEffect(\n        () => {\n         const fetchAllTeams = async () => {\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\n            const data = await response.json();\n            setTeams(data);\n         };\n         fetchAllTeams();\n        }, []\n    );\n\n    return (\n        <div className=\"HomePage\">\n            <div className=\"header-section\">\n                <h1 className=\"app-name\">IPL Dashboard</h1>\n            </div>\n            <div className=\"team-grid\">\n                { teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)}\n            </div>\n        </div>\n    );\n}","import { React } from \"react\";\nimport { Link } from 'react-router-dom';\nimport './NavBar.scss';\n\nexport const NavBar = () => {\n\n  return (\n    <div className=\"NavBar\">\n      <Link to={``}>{'Team Dashboard'}</Link>\n    </div>\n  );\n}","import './App.scss';\nimport { HashRouter as Router, Route, Routes} from 'react-router-dom';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\nimport {NavBar} from \"./components/NavBar\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <NavBar />      \n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/teams/:teamName\" element={<TeamPage />} />\n          <Route path=\"/teams/:teamName/matches/:year\" element={<MatchPage />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}